#include <iostream>
#include <fstream>
#include <sstream>
#include <string>

using namespace std;

const int MAX_STUDENTS = 100;

struct Student {
    string regNo;
    string name;
    string program;
    double GPA;
    string phoneNumber;
};

int readData(const string& filename, Student students[], int& numStudents) {
    ifstream file(filename);
    if (!file.is_open()) {
        cout << "Error: Unable to open file " << filename << endl;
        return -1;
    }

    string line;
    numStudents = 0;
    while (getline(file, line) && numStudents < MAX_STUDENTS) {
        stringstream ss(line);
        getline(ss, students[numStudents].regNo, ',');
        getline(ss, students[numStudents].name, ',');
        getline(ss, students[numStudents].program, ',');
        ss >> students[numStudents].GPA;
        ss.ignore();
        getline(ss, students[numStudents].phoneNumber, ',');
        ++numStudents;
    }

    file.close();
    return 0;
}

void appendData(const string& filename, const Student& student) {
    ofstream file(filename, ios_base::app);
    if (!file.is_open()) {
        cout << "Error: Unable to open file " << filename << " for appending." << endl;
        return;
    }

    file << student.regNo << ',' << student.name << ',' << student.program << ',' << student.GPA << ',' << student.phoneNumber << endl;
    file.close();
}

void updateCGPA(const string& filename, const string& regNo, double newCGPA) {
    ifstream fileIn(filename);
    ofstream fileOut("temp.txt");

    if (!fileIn.is_open() || !fileOut.is_open()) {
        cout << "Error: Unable to open files for updating." << endl;
        return;
    }

    string line;
    while (getline(fileIn, line)) {
        stringstream ss(line);
        string currRegNo;
        getline(ss, currRegNo, ',');
        if (currRegNo == regNo) {
            fileOut << regNo << ',';
            getline(ss, line);
            getline(ss, line);
            fileOut << newCGPA << ',';
            getline(ss, line); 
            fileOut << endl;
        }
        else {
            fileOut << line << endl;
        }
    }

    fileIn.close();
    fileOut.close();

    remove(filename.c_str());
    rename("temp.txt", filename.c_str());
}

int main() {
    string filename = "data.csv";
    Student students[MAX_STUDENTS];
    int numStudents = 0;

    if (readData(filename, students, numStudents) != 0) {
        return 1;
    }

    string regNo;
    cout << "Enter registration number to update CGPA: ";
    cin >> regNo;

    double newCGPA;
    cout << "Enter new CGPA: ";
    cin >> newCGPA;

    updateCGPA(filename, regNo, newCGPA);
    cout << "CGPA updated successfully." << endl;

    return 0;
}
